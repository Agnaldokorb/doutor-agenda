import "dotenv/config";

import { drizzle } from "drizzle-orm/node-postgres";
import { Pool } from "pg";

import * as schema from "./schema";

// Fun√ß√£o para determinar configura√ß√£o SSL baseada na URL do banco
function getSSLConfig() {
  const databaseUrl = process.env.DATABASE_URL!;

  // Para localhost (desenvolvimento local), sem SSL
  if (databaseUrl.includes("localhost") || databaseUrl.includes("127.0.0.1")) {
    return false;
  }

  // Para provedores cloud (Neon, Supabase, etc.), usar SSL mas aceitar certificados
  if (process.env.NODE_ENV === "production") {
    return {
      rejectUnauthorized: false, // Aceita certificados auto-assinados de provedores
      require: true,
    };
  }

  // Em desenvolvimento com banco remoto
  return {
    rejectUnauthorized: false,
    require: true,
  };
}

// Configura√ß√£o segura da conex√£o com PostgreSQL
const poolConfig = {
  connectionString: process.env.DATABASE_URL!,
  ssl: getSSLConfig(),
  // Configura√ß√µes de seguran√ßa
  max: 20, // m√°ximo de conex√µes simult√¢neas
  idleTimeoutMillis: 30000,
  connectionTimeoutMillis: 10000,
};

console.log(`üóÑÔ∏è [DATABASE] Configurando conex√£o para: ${process.env.NODE_ENV}`);
console.log(`üóÑÔ∏è [DATABASE] SSL config:`, getSSLConfig());

const pool = new Pool(poolConfig);

export const db = drizzle(pool, { schema });
